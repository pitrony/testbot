from aiogram import types, F, Router
from aiogram.filters.command import Command
import logging
import random
from keyboard.keyboards import kb1, kb2
from utilits.random_fox import fox

router = Router()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command('start'))
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}', reply_markup=kb1)
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∏–Ω—Ñ–æ
@router.message(F.text.lower() == '–∏–Ω—Ñ–æ')
async def cmd_info(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–ª –§—Ä–æ–ª–æ–≤ –ê–ª–µ–∫—Å–µ–π email: frolov25alesha@gmail.com', reply_markup=kb1)
@router.message(Command('help'))
async def cmd_help(message: types.Message):
    await message.answer(help_mess, reply_markup=types.ReplyKeyboardRemove())

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command('stop'))
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü–æ–∫–∞, {name}',  reply_markup=types.ReplyKeyboardRemove())
# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command('fox'))
@router.message(F.text.lower() == '–ª–∏—Å–∞')
@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
@router.message(F.text.lower() == '–ø–æ–∫–∞–∑–∞—Ç—å –ª–∏—Å—É')
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}')
    await message.answer_photo(photo=img_fox)
# await bot.send_photo(message.from_user.id, photo=img_fox)
help_mess = ('/start - –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ ' + '\n' + 'help -  –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n –ø–æ–∫–∞ - –ø–æ–∫–∞ –æ—Ç –±–æ—Ç–∞\n' +
             '/fox, –ª–∏—Å–∞, –ø–æ–∫–∞–∂–∏ –ª–∏—Å—É, –ø–æ–∫–∞–∑–∞—Ç—å –ª–∏—Å—É - –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —Å –ª–∏—Å–æ–π\n /stop - –°—Ç–æ–ø –±–æ—Ç–∞\n'+
             '/prof - –ø—Ä–∏–º–µ—Ä –ø–æ —Ü–µ–ø–æ—á–∫–∞–º –≤—ã–±–æ—Ä–∞\n —Ç—ã –∫—Ç–æ - –≤—ã–≤–æ–¥ –µ–º–æ–¥–∂–∏\n'+
             '/weather - –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–∞—Ö,\n'+
             '–ø–æ–≥–æ–¥–∞ –≤ —Å–ø–± - –ø–æ–≥–æ–¥–∞ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ,\n–ø–æ–≥–æ–¥–∞ –≤ –º–æ—Å–∫–≤–µ - –ø–æ–≥–æ–¥–∞ –≤ –ú–æ—Å–∫–≤–µ')

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, {name}')
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}')
    elif 'help' == msg_user:
        await message.answer(help_mess)
    elif '—Ç—ã –∫—Ç–æ' in msg_user:
        await message.answer_dice(emoji="üé≤")
    elif '–Ω–∞–π—Ç–∏ –ª–∏—Å—É' in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å, {name}', reply_markup=kb2)
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')

